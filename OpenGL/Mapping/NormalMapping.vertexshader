#version 330 core

layout(location = 0) in vec3 position;
layout(location = 1) in vec2 texCoord;
layout(location = 2) in vec3 normal;
layout(location = 3) in vec3 tangent;

// uniform mat4 MVP;
uniform mat4 ProjMat, ViewMat, WorldMat;
uniform vec3 eyePos, lightDir;

out vec2 v_texCoord;
// out vec3 v_view;
out vec3 v_lightTS, v_viewTS;

void main() 
{
	// Å¬¸³ °ø°£ ÁÂÇ¥
	gl_Position = ProjMat * ViewMat * WorldMat * vec4(position, 1.0);

	// uv ÁÂÇ¥
	v_texCoord = texCoord;

	// view vector ±¸ÇÏ·Á°í worldPos ±¸ÇÏ±â
	vec3 worldPos = (WorldMat * vec4(position, 1.0)).xyz;
	// v_view = normalize(eyePos - worldPos);

	// ÅºÁ¨Æ® °ø°£ ³ë¸Ö ¸ÅÇÎ À§ÇØ TBN ±¸ÇÏ±â
	vec3 Nor = normalize(transpose(inverse(mat3(WorldMat))) * normal);
	vec3 Tan = normalize(transpose(inverse(mat3(WorldMat))) * tangent);
	vec3 Bit = cross(Nor, Tan);
	// ÅºÁ¨Æ® °ø°£ º¯È¯ Çà·Ä
	mat3 tbnMat = transpose(mat3(Tan, Bit, Nor));

	// ºû º¤ÅÍ, ºä º¤ÅÍ¸¦ ÅºÁ¨Æ® °ø°£À¸·Î º¯È¯
	v_lightTS = tbnMat * normalize(lightDir);
	v_viewTS = tbnMat * normalize(eyePos - worldPos);
}