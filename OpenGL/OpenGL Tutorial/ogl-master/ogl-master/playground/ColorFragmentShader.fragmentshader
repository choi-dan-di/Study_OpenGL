#version 330 core

// Interpolated values from the vertex shaders
in vec3 fragmentColor;
in vec3 Normal;
in vec3 FragPos;

// Ouput data
out vec3 color;

void main(){
	vec3 lightPos = vec3(0.0);
	vec3 lightColor = vec3(1.0);
	vec3 viewPos = vec3(4.0, 3.0, -3.0);

	// diffuse
	vec3 norm = normalize(Normal);
	vec3 lightDir = normalize(lightPos - FragPos);
	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = diff * lightColor;

	// specular
	float specularStrength = 0.5;
	vec3 viewDir = normalize(viewPos - FragPos);
	vec3 reflectDir = reflect(-lightDir, norm);
	float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
	vec3 specular = specularStrength * spec * lightColor;

	// ambient
	float ambientStrength = 0.1;
	vec3 ambi = ambientStrength * lightColor;
	vec3 ambient = ambi * fragmentColor;

	// final color
	color = (diffuse + specular + ambient) * fragmentColor;
}